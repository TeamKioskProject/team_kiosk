import 'package:flutter/material.dart';
import 'package:flutter_riverpod/flutter_riverpod.dart';
import 'package:team_kiosk/core/constants/app_colors.dart';
import 'package:team_kiosk/core/constants/app_texts.dart';
import 'package:team_kiosk/core/state/app_mode.dart';
import 'package:team_kiosk/core/state/app_state_provider.dart';
import 'package:team_kiosk/demo_test/app_scaffold.dart';

class DemoTestScreen extends ConsumerWidget {
  const DemoTestScreen({super.key});

  @override
  Widget build(BuildContext context, WidgetRef ref) {
    final notifier = ref.read(appStateProvider.notifier);

    return AppScaffold(
      title: 'DemoTestScreen',
      builder: (context, theme, styles) {
        return SingleChildScrollView(
          padding: const EdgeInsets.all(16),
          child: Column(
            crossAxisAlignment: CrossAxisAlignment.stretch,
            children: [
              // ‚úÖ ÌÖåÎßà Ï†ÑÌôò Î≤ÑÌäº
              Text('üßæ ÌÖåÎßà Î≥ÄÍ≤Ω', style: styles.headline2),
              const SizedBox(height: 8),
              ElevatedButton(
                onPressed: () => notifier.changeMode(AppMode.burger),
                style: ElevatedButton.styleFrom(backgroundColor: theme.primary),
                child: Text('üçî ÌñÑÎ≤ÑÍ±∞ ÌÖåÎßàÎ°ú Î≥ÄÍ≤Ω', style: styles.button),
              ),
              const SizedBox(height: 8),
              ElevatedButton(
                onPressed: () => notifier.changeMode(AppMode.cafe),
                style: ElevatedButton.styleFrom(backgroundColor: theme.primary),
                child: Text('‚òï Ïπ¥Ìéò ÌÖåÎßàÎ°ú Î≥ÄÍ≤Ω', style: styles.button),
              ),

              const Divider(height: 32),

              // ‚úÖ Î∞∞Î¶¨Ïñ¥ ÌîÑÎ¶¨ ÌÜ†Í∏Ä
              Text('üß© Î∞∞Î¶¨Ïñ¥ÌîÑÎ¶¨ Î™®Îìú', style: styles.headline2),
              const SizedBox(height: 8),
              ElevatedButton(
                onPressed: () => notifier.setBarrierFree(true),
                child: Text('üîä Î∞∞Î¶¨Ïñ¥ÌîÑÎ¶¨ ON', style: styles.button),
              ),
              const SizedBox(height: 8),
              ElevatedButton(
                onPressed: () => notifier.setBarrierFree(false),
                child: Text('üîá Î∞∞Î¶¨Ïñ¥ÌîÑÎ¶¨ OFF', style: styles.button),
              ),

              const Divider(height: 32),

              // ‚úÖ ÌÖåÎßà ÏÉâÏÉÅ ÎØ∏Î¶¨Î≥¥Í∏∞
              Text('üé® ÌÖåÎßà ÏÉâÏÉÅ ÎØ∏Î¶¨Î≥¥Í∏∞', style: styles.headline2),
              const SizedBox(height: 8),
              _buildColorBox('Primary', theme.primary),
              _buildColorBox('Secondary', theme.secondary),
              _buildColorBox('Background', theme.background),
              _buildColorBox('Surface', theme.surface),
              _buildColorBox('Text', theme.text),
              _buildColorBox('SubText', theme.subText),

              const Divider(height: 32),

              // ‚úÖ ÌÖçÏä§Ìä∏ Ïä§ÌÉÄÏùº ÎØ∏Î¶¨Î≥¥Í∏∞
              Text('‚úçÔ∏è ÌÖçÏä§Ìä∏ Ïä§ÌÉÄÏùº ÎØ∏Î¶¨Î≥¥Í∏∞', style: styles.headline2),
              const SizedBox(height: 8),
              Text('Headline1 Ïä§ÌÉÄÏùºÏûÖÎãàÎã§', style: styles.headline1),
              const SizedBox(height: 8),
              Text('Headline2 Ïä§ÌÉÄÏùºÏûÖÎãàÎã§', style: styles.headline2),
              const SizedBox(height: 8),
              Text('Î≥∏Î¨∏ Body ÌÖçÏä§Ìä∏ÏûÖÎãàÎã§.', style: styles.body),
              const SizedBox(height: 8),
              Text('Í∞ïÏ°∞ ÌÖçÏä§Ìä∏ (Accent)', style: styles.accent),
              const SizedBox(height: 8),
              Text('Ï∫°ÏÖò ÌÖçÏä§Ìä∏ÏûÖÎãàÎã§.', style: styles.caption),
              const SizedBox(height: 16),
              ElevatedButton(
                onPressed: () => notifier.toggleBarrierFree(),
                style: ElevatedButton.styleFrom(backgroundColor: theme.primary),
                child: Text('Î≤ÑÌäº Ïä§ÌÉÄÏùº ÏòàÏãú', style: styles.button),
              ),
            ],
          ),
        );
      },
    );
  }

  Widget _buildColorBox(String label, Color color) {
    final textColor = ThemeData.estimateBrightnessForColor(color) == Brightness.dark
        ? Colors.white
        : Colors.black;

    return Container(
      width: double.infinity,
      height: 60,
      color: color,
      alignment: Alignment.centerLeft,
      padding: const EdgeInsets.symmetric(horizontal: 16),
      margin: const EdgeInsets.only(bottom: 8),
      child: Text(
        label,
        style: TextStyle(
          color: textColor,
          fontWeight: FontWeight.bold,
        ),
      ),
    );
  }
}